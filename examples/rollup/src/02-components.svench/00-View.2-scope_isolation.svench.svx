<script>
  import { View } from 'svench'

  import Binder from '../Binder.svelte'

  let value = 0
</script>

# `<View>` scope isolation

Views are isolated by default.

This means that an instance of a component that declares the view will be created for each individual view -- and, most crucially, the `<script>` instance will be run for each view and its scope variables won't be shared.

```svelte
<script>
  import { View } from 'svench'

  import Binder from './Binder.svelte'

  let value = 0
</script>

<View name="default">
  <Binder bind:value />
</View>

<View name="another view">
  <Binder bind:value />
</View>
```

<View name="default">
  <Binder bind:value />
</View>

<View name="another view">
  <Binder bind:value />
</View>

## `jailbreak`

The `jailbreak` prop can be used on some `<View>`s to make them share the same scope -- provided they appear in the same page (and with the same render parent...).

```svelte
<script>
  import { View } from 'svench'

  import Binder from './Binder.svelte'

  let value = 0
</script>

<View name="jailbreak 1" jailbreak>
  <Binder bind:value />
</View>

<View name="jailbreak 2" jailbreak>
  <Binder bind:value />
</View>
```

<View name="jailbreak 1" jailbreak>
  <Binder bind:value />
</View>

<View name="jailbreak 2" jailbreak>
  <Binder bind:value />
</View>
